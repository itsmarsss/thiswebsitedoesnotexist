"use client";

import { useState, useEffect } from "react";
import { useRouter, usePathname } from "next/navigation";
import { generateRandomPath } from "@/lib/randomPaths";
import Tooltip from "./Tooltip";
import ToolButton from "./ToolButton";
import SocialIcon from "./SocialIcon";

const MAX_HISTORY = 100;

export default function HoverToolbar() {
    const router = useRouter();
    const pathname = usePathname();
    const [isExpanded, setIsExpanded] = useState(true);
    const [history, setHistory] = useState<string[]>([]);
    const [isRegenerating, setIsRegenerating] = useState(false);

    useEffect(() => {
        setTimeout(() => {
            setIsExpanded(false);
        }, 2000);
    }, []);

    // Load history on mount and save new paths
    useEffect(() => {
        // Load history from localStorage
        const savedHistory = localStorage.getItem("pathHistory");
        if (savedHistory) {
            setHistory(JSON.parse(savedHistory));
        }

        // Add current path to history if it's not the latest
        if (pathname !== "/") {
            setHistory((prev) => {
                const newHistory = [
                    pathname,
                    ...prev.filter((path) => path !== pathname),
                ].slice(0, MAX_HISTORY);
                localStorage.setItem("pathHistory", JSON.stringify(newHistory));
                return newHistory;
            });
        }
    }, [pathname]);

    const handleSoftReload = async () => {
        try {
            setIsRegenerating(true);
            const iframe = document.querySelector("iframe");
            if (iframe?.contentDocument) {
                const currentHTML =
                    iframe.contentDocument.documentElement.outerHTML;
                iframe.contentDocument.open();
                iframe.contentDocument.write(currentHTML);
                iframe.contentDocument.close();
            }
        } catch (error) {
            console.error("Error during soft reload:", error);
        } finally {
            setIsRegenerating(false);
        }
    };

    const handleRandomClick = () => {
        const randomPath = generateRandomPath();
        router.push(randomPath);
    };

    const handleDownload = () => {
        // Get the iframe element
        const iframe = document.querySelector("iframe");
        if (!iframe?.contentDocument) return;

        // Get the HTML content
        const html = iframe.contentDocument.documentElement.outerHTML;

        // Create a blob and download link
        const blob = new Blob([html], { type: "text/html" });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = `${pathname.slice(1) || "home"}.html`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
    };

    const handleShare = () => {
        const text = `Check out this AI-generated website I found: ${pathname}\n\nGenerated by This Website Does Not Exist ü§ñ‚ú®\n`;
        const url = typeof window !== "undefined" ? window.location.href : "";
        window.open(
            `https://twitter.com/intent/tweet?text=${encodeURIComponent(
                text
            )}&url=${encodeURIComponent(url)}`,
            "_blank"
        );
    };

    return (
        <div
            className={`fixed top-0 right-0 z-[9999] ${
                isExpanded ? "w-64" : "w-12"
            } transition-[width] duration-300 h-screen`}
            onMouseEnter={() => setIsExpanded(true)}
            onMouseLeave={() => setIsExpanded(false)}
        >
            <div className="bg-black/80 backdrop-blur-lg text-white h-full shadow-lg relative">
                {isExpanded ? (
                    <div className="absolute inset-0 overflow-y-auto [&::-webkit-scrollbar]:hidden [-ms-overflow-style:'none'] [scrollbar-width:none]">
                        <div className="p-3 min-h-full flex flex-col">
                            <div className="flex-none">
                                <h2 className="text-lg font-bold mb-4">
                                    Tools
                                </h2>

                                <div className="space-y-2">
                                    <ToolButton
                                        icon={<span>üîÑ</span>}
                                        text="Hard Reload"
                                        tooltip="Regenerate with new content"
                                        onClick={() => window.location.reload()}
                                    />

                                    <ToolButton
                                        icon={<span>‚ú®</span>}
                                        text="Soft Reload"
                                        tooltip="Refresh the current content"
                                        onClick={handleSoftReload}
                                        isLoading={isRegenerating}
                                        disabled={isRegenerating}
                                    />

                                    <ToolButton
                                        icon={<span>üé≤</span>}
                                        text="Random"
                                        tooltip="Generate random website"
                                        onClick={handleRandomClick}
                                    />

                                    <ToolButton
                                        icon={<span>üíæ</span>}
                                        text="Download HTML"
                                        tooltip="Download page HTML"
                                        onClick={handleDownload}
                                    />

                                    <ToolButton
                                        icon={<span>üê¶</span>}
                                        text="Share on Twitter"
                                        tooltip="Share this website on Twitter"
                                        onClick={handleShare}
                                    />

                                    <ToolButton
                                        icon={<span>üè†</span>}
                                        text="Home"
                                        tooltip="Return to home page"
                                        onClick={() => router.push("/")}
                                    />
                                </div>
                            </div>

                            <div className="border-t border-white/20 my-4 flex-none"></div>

                            <div className="text-sm flex-none">
                                <div className="font-bold mb-2">
                                    Current Path:
                                </div>
                                <div className="bg-black/20 rounded-lg p-2 font-mono text-sm break-all">
                                    {pathname}
                                </div>
                            </div>

                            {history.length > 0 && (
                                <div className="text-sm mt-4 flex flex-col flex-none">
                                    <div className="font-bold mb-2 flex-none flex items-center justify-between">
                                        <span>History:</span>
                                        <div className="flex gap-1">
                                            <Tooltip text="Scroll up">
                                                <button
                                                    onClick={() => {
                                                        const container =
                                                            document.querySelector(
                                                                "#history-container"
                                                            );
                                                        if (container) {
                                                            container.scrollBy({
                                                                top: -41,
                                                                behavior:
                                                                    "smooth",
                                                            }); // 41px = element height (32) + margin (9)
                                                        }
                                                    }}
                                                    className="w-8 h-6 flex items-center justify-center hover:bg-white/10 rounded transition-colors text-white/70 hover:text-white cursor-pointer"
                                                >
                                                    ‚ñ≤
                                                </button>
                                            </Tooltip>
                                            <Tooltip text="Scroll down">
                                                <button
                                                    onClick={() => {
                                                        const container =
                                                            document.querySelector(
                                                                "#history-container"
                                                            );
                                                        if (container) {
                                                            container.scrollBy({
                                                                top: 41,
                                                                behavior:
                                                                    "smooth",
                                                            }); // 41px = element height (32) + margin (9)
                                                        }
                                                    }}
                                                    className="w-8 h-6 flex items-center justify-center hover:bg-white/10 rounded transition-colors text-white/70 hover:text-white cursor-pointer"
                                                >
                                                    ‚ñº
                                                </button>
                                            </Tooltip>
                                        </div>
                                    </div>
                                    <div className="h-48 relative">
                                        <div
                                            id="history-container"
                                            className="overflow-y-auto absolute inset-0 [&::-webkit-scrollbar]:hidden [-ms-overflow-style:'none'] [scrollbar-width:none]"
                                        >
                                            {history.map((path, index) => (
                                                <a
                                                    key={index}
                                                    onClick={(e) => {
                                                        e.preventDefault();
                                                        router.push(path);
                                                    }}
                                                    className="block px-2 py-1.5 mb-1 bg-black/20 hover:bg-black/30 rounded font-mono text-sm break-all transition-colors cursor-pointer"
                                                >
                                                    {path}
                                                </a>
                                            ))}
                                        </div>
                                    </div>
                                </div>
                            )}

                            <div className="mt-4 pt-4 border-t border-white/20 flex-none">
                                <div className="flex gap-2 mb-4">
                                    <ToolButton
                                        icon={
                                            <SocialIcon
                                                type="github"
                                                className="w-5 h-5"
                                            />
                                        }
                                        text="GitHub"
                                        tooltip="Visit my GitHub profile"
                                        onClick={() =>
                                            window.open(
                                                "https://github.com/itsmarsss",
                                                "_blank"
                                            )
                                        }
                                    />
                                    <ToolButton
                                        icon={
                                            <SocialIcon
                                                type="x"
                                                className="w-5 h-5"
                                            />
                                        }
                                        text="Twi- X"
                                        tooltip="Visit my X profile"
                                        onClick={() =>
                                            window.open(
                                                "https://x.com/__kennywu__",
                                                "_blank"
                                            )
                                        }
                                    />
                                </div>
                                <div className="text-xs opacity-50 text-center">
                                    Hover to expand/collapse
                                </div>
                            </div>
                        </div>
                    </div>
                ) : (
                    <div className="absolute inset-0 flex items-center justify-center">
                        <div className="rotate-90 whitespace-nowrap text-sm opacity-70">
                            Hover here for tools
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
}
